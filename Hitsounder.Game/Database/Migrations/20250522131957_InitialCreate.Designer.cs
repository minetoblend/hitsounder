// <auto-generated />
using System;
using Hitsounder.Game.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hitsounder.Game.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250522131957_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Hitsounder.Game.Core.ProjectInfo", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectId");

                    b.HasIndex("Name");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Hitsounder.Game.Core.Samples.HitSoundSampleInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSampleSet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultSampleType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SampleCollectionInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SampleCollectionInfoId");

                    b.ToTable("HitSoundSamples");
                });

            modelBuilder.Entity("Hitsounder.Game.Core.Samples.SampleCollectionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Global")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProjectInfoProjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectInfoProjectId");

                    b.ToTable("SampleCollections");
                });

            modelBuilder.Entity("Hitsounder.Game.Core.Samples.HitSoundSampleInfo", b =>
                {
                    b.HasOne("Hitsounder.Game.Core.Samples.SampleCollectionInfo", null)
                        .WithMany("Samples")
                        .HasForeignKey("SampleCollectionInfoId");
                });

            modelBuilder.Entity("Hitsounder.Game.Core.Samples.SampleCollectionInfo", b =>
                {
                    b.HasOne("Hitsounder.Game.Core.ProjectInfo", null)
                        .WithMany("SampleCollections")
                        .HasForeignKey("ProjectInfoProjectId");
                });

            modelBuilder.Entity("Hitsounder.Game.Core.ProjectInfo", b =>
                {
                    b.Navigation("SampleCollections");
                });

            modelBuilder.Entity("Hitsounder.Game.Core.Samples.SampleCollectionInfo", b =>
                {
                    b.Navigation("Samples");
                });
#pragma warning restore 612, 618
        }
    }
}
